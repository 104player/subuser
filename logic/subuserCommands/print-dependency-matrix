#!/usr/bin/env python
# This file should be compatible with both Python 2 and 3.
# If it is not, please file a bug report.
import optparse,sys
import subuserlib.registry
import subuserlib.availablePrograms
import subuserlib.commandLineArguments

def parseCliArgs():
  usage = "usage: subuser %prog PROGRAM_NAME(s) SETS_OF_PROGRAMS"
  description = """Print  a dependency matrix showing how the listed programs relate to eachother:

Example:

    $ subuser print-dependency-matrix firefox vim xterm

There are also several predefined sets of programs which can be used:
  available - programs available for instalation
    $ subuser print-dependency-matrix available

  installed - programs that have been installed
    $ subuser print-dependency-matrix installed
"""
  parser = optparse.OptionParser(usage=usage,description=description,formatter=subuserlib.commandLineArguments.HelpFormatterThatDoesntReformatDescription())
  return parser.parse_args()

def printDependencyMatrices(programs):
  dependencyMatrix = subuserlib.registry.getDependencyMatrix(programs, useHasExecutable=False, sortLists=True)
  print("\n===== DEPENDENCY MATRIX =====\n")
  for programMain in dependencyMatrix.keys():
    print("<%s>:" % programMain)
    print("    required-by: %s" % dependencyMatrix[programMain]["required-by"])
    print("    depends-on: %s" % dependencyMatrix[programMain]["depends-on"])

#################################################################################################

(options,args) = parseCliArgs()

if len(args) == 0:
  sys.exit("No programs specified.  Issue this command with -h to view help.")

if 'available' in args:
  print("Dependency matrices for programs that are available for instalation:")
  printDependencyMatrices(subuserlib.availablePrograms.getAvailablePrograms())

if 'installed' in args:
  print("Dependency matrices for installed programs:")
  printDependencyMatrices(subuserlib.registry.getInstalledPrograms())

userProgramList = list(set(args).difference({'installed','available'}))

if len(userProgramList) > 0:
 print("Interdependencies between specified programs:")
 printDependencyMatrices(userProgramList)
